name: Push into ECR

on:
  push:
    branches: [ main ]
    
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:      
      - name: Checkout
        uses: actions/checkout@v2
            
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with: 
          dotnet-version: 5.0.x
        
      - name: Build
        working-directory: src/Net.Sample/
        run: dotnet build
  pulumi_preview:
    runs-on: ubuntu-latest
    needs: [build]
    name: Pulumi Preview
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Setup Pulumi CLI
        uses: pulumi/setup-pulumi@v2.0.0
        
      - name: Pulumi Preview
        uses: pulumi/actions@v3.15.0
        with:
          cloud-url: s3://${{ secrets.AWS_PULUMI_STATE_S3_BUCKET_NAME }}
          command: preview
          work-dir: src/Infrastructure/Net.Sample.Infraestructure.Aws.AppService.Api
          stack-name: dev        
          # If you need the GitHub Action to create the stack, you need to set the `upsert` with a `true` value.
          # https://www.pulumi.com/docs/guides/continuous-delivery/github-actions/#stack-upsert
          upsert: true
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "eu-central-1"
          PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
    
  pulumi_up:
    runs-on: ubuntu-latest
    needs: [pulumi_preview]
    name: Pulumi Up
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Setup Pulumi CLI
        uses: pulumi/setup-pulumi@v2.0.0
        
      - name: Pulumi Up
        id: pulumi-sample
        uses: pulumi/actions@v3.15.0
        with:
          cloud-url: s3://${{ secrets.AWS_PULUMI_STATE_S3_BUCKET_NAME }}
          command: up
          work-dir: src/Infrastructure/Net.Sample.Infraestructure.Aws.AppService.Api
          stack-name: dev        
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "eu-central-1"
          PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
        
    outputs:
      ecr_Url : ${{ steps.pulumi-sample.outputs.RepositoryUrl }}
       
  docker_build:
    runs-on: ubuntu-latest
    needs: [pulumi_up]
    name: Build and Push image into ECR
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "eu-central-1"
      
      # You need to setup the AWS Credentials otherwise it will throw an error
      - name: Amazon ECR "Login" Action for GitHub Actions
        uses: aws-actions/amazon-ecr-login@v1        
      
      #If you dont Login into the ECR, when it try to push the image it will throw an error:
      # error: no basic auth credentials
      - name: Build and push Docker images
        uses: docker/build-push-action@v3.0.0
        with:
          tags: ${{ needs.pulumi_up.outputs.ecr_Url }}:${{ github.run_id }}
          file: src/Net.Sample/AppServices/Net.Sample.AppService.Api/Dockerfile
          context: src/Net.Sample/AppServices/Net.Sample.AppService.Api/
          push: true



